
------------WORKING
--------- add to cart procedure
CREATE OR REPLACE PROCEDURE ADDTOCART(UID IN NUMBER, PID IN NUMBER) IS
		N_ID NUMBER := 0;
    OLD_QUANTITY NUMBER := 0;
    BEGIN
SELECT COUNT(*) INTO N_ID FROM CART WHERE USER_ID = UID;
    -- IF NOT THEN CREATE A NEW CART
    IF N_ID=0 THEN
        SELECT (NVL(MAX(CART_ID),0)+1) INTO N_ID FROM CART;
				DBMS_OUTPUT.PUT_LINE('IN IF');
        INSERT INTO CART VALUES (N_ID, UID, PID, 1, SYSDATE);
				RETURN;
    END IF;
		SELECT (NVL(MAX(CART_ID),0)) INTO N_ID FROM CART WHERE USER_ID=UID;
    SELECT COUNT(*) INTO OLD_QUANTITY FROM CART WHERE USER_ID =UID AND PRODUCT_ID =PID AND CART_ID = N_ID;
    IF OLD_QUANTITY=0 THEN
        INSERT INTO CART VALUES (N_ID,UID,PID,1 , SYSDATE);
    ELSE
        UPDATE CART SET QUANTITY = QUANTITY + 1 WHERE USER_ID =UID AND PRODUCT_ID = PID AND N_ID=CART_ID;
    END IF;
		
		EXCEPTION
			 WHEN OTHERS THEN
					DBMS_OUTPUT.PUT_LINE('HI');
END;


BEGIN 
	ADDTOCART(1,2);
END;

----UPDATE PROMOCODE BY INSERTING IN PRODUCTS TABLE
 CREATE OR REPLACE TRIGGER UPDATE_PROMO_CODE
    BEFORE INSERT ON PRODUCTS
		FOR EACH ROW
    DECLARE
    PROMO VARCHAR2(10);
    DISC_AMOUNT NUMBER;
		N NUMBER;
    BEGIN
    PROMO:= :NEW.PROMO_CODE;
    IF PROMO IS NOT NULL THEN
				DISC_AMOUNT:= TO_NUMBER(SUBSTR(PROMO, LENGTH(PROMO)-1, 2));
        SELECT COUNT(*) INTO N FROM DISCOUNTS WHERE PROMO_CODE= PROMO;
				IF N=0 THEN
						INSERT INTO DISCOUNTS VALUES (PROMO, DISC_AMOUNT,0);
				END IF;
    END IF;
    EXCEPTION
		WHEN NO_DATA_FOUND THEN
				DBMS_OUTPUT.PUT_LINE('ERROR');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('ERROR');
    END;
		

-----------TESTING (NOT WORKING)


CREATE OR REPLACE FUNCTION ADDPRODUCT(PNAME IN VARCHAR2, CAT_ID IN NUMBER, PDESCRIPTION IN VARCHAR2, PIMAGE IN VARCHAR2 , PSTOCK IN NUMBER, PPRICE IN NUMBER, PPROMO IN VARCHAR2, PSHOP IN NUMBER) RETURN NUMBER IS
    N_ID NUMBER := 0;
    BEGIN
        SELECT (NVL(MAX(PRODUCT_ID),0)+1) INTO N_ID FROM PRODUCT;
        INSERT INTO PRODUCT VALUES (N_ID, PNAME,CAT_ID, PDESCRIPTION, PIMAGE, PSTOCK, PPRICE, PPROMO, PSHOP);

        RETURN N_ID;
    END;
    
    
    BEGIN
        ADDPRODUCT('Iphone', 1, 'Iphone 12', 'iphone12.jpg', 100, 1000, '', 1);
    END;

    
    

    CREATE OR REPLACE FUNCTION ADDPRODUCT(PNAME IN VARCHAR2, CAT_ID IN NUMBER, PDESCRIPTION IN VARCHAR2, PIMAGE IN VARCHAR2 , PSTOCK IN NUMBER, PPRICE IN NUMBER, PPROMO IN VARCHAR2, PSHOP IN NUMBER) RETURN NUMBER IS
    N_ID NUMBER := 0;
    BEGIN
        SELECT (NVL(MAX(PRODUCT_ID),0)+1) INTO N_ID FROM PRODUCTS;
        INSERT INTO PRODUCTS VALUES (N_ID, PNAME,CAT_ID, PDESCRIPTION, PIMAGE, PSTOCK, PPRICE, PPROMO, PSHOP);

        RETURN N_ID;
    END;
